# Reynolds Orchestration System - Prometheus Configuration
# Metrics collection and monitoring configuration

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'reynolds-orchestration'
    environment: 'development'

# Rules and alerting
rule_files:
  - "rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Scrape configurations
scrape_configs:
  # Reynolds Orchestrator Metrics
  - job_name: 'reynolds-orchestrator'
    static_configs:
      - targets: ['reynolds:8080']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    metric_relabel_configs:
      # Rename Reynolds-specific metrics
      - source_labels: [__name__]
        regex: 'reynolds_(.+)'
        target_label: __name__
        replacement: 'orchestrator_${1}'
      # Add service type label
      - target_label: service_type
        replacement: 'orchestrator'
      - target_label: system
        replacement: 'reynolds-orchestration'

  # DevOps Agent Metrics
  - job_name: 'devops-agents'
    dns_sd_configs:
      - names:
          - 'devops-agent'
        type: 'A'
        port: 8080
    metrics_path: '/metrics'
    scrape_interval: 15s
    metric_relabel_configs:
      - target_label: agent_type
        replacement: 'devops-polyglot'
      - target_label: service_type
        replacement: 'agent'
      - target_label: system
        replacement: 'reynolds-orchestration'

  # Platform Agent Metrics
  - job_name: 'platform-agents'
    dns_sd_configs:
      - names:
          - 'platform-agent'
        type: 'A'
        port: 8080
    metrics_path: '/metrics'
    scrape_interval: 15s
    metric_relabel_configs:
      - target_label: agent_type
        replacement: 'platform-specialist'
      - target_label: service_type
        replacement: 'agent'
      - target_label: system
        replacement: 'reynolds-orchestration'

  # Code Intelligence Agent Metrics
  - job_name: 'code-agents'
    dns_sd_configs:
      - names:
          - 'code-agent'
        type: 'A'
        port: 8080
    metrics_path: '/metrics'
    scrape_interval: 15s
    metric_relabel_configs:
      - target_label: agent_type
        replacement: 'code-intelligence'
      - target_label: service_type
        replacement: 'agent'
      - target_label: system
        replacement: 'reynolds-orchestration'

  # Redis Metrics (using redis_exporter)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    metrics_path: '/metrics'
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service_type
        replacement: 'infrastructure'
      - target_label: system
        replacement: 'reynolds-orchestration'

  # PostgreSQL Metrics (using postgres_exporter)
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres:5432']
    metrics_path: '/metrics'
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service_type
        replacement: 'infrastructure'
      - target_label: system
        replacement: 'reynolds-orchestration'

  # Docker Container Metrics (cAdvisor)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: '/metrics'
    metric_relabel_configs:
      - target_label: service_type
        replacement: 'monitoring'
      - target_label: system
        replacement: 'reynolds-orchestration'

  # Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service_type
        replacement: 'monitoring'
      - target_label: system
        replacement: 'reynolds-orchestration'

  # Prometheus Self-Monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service_type
        replacement: 'monitoring'
      - target_label: system
        replacement: 'reynolds-orchestration'

  # Grafana Metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service_type
        replacement: 'monitoring'
      - target_label: system
        replacement: 'reynolds-orchestration'

# Remote write configuration (for external monitoring systems)
# Uncomment and configure for production use
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"
#     queue_config:
#       max_samples_per_send: 10000
#       batch_send_deadline: 5s
#       min_shards: 1
#       max_shards: 10

# Remote read configuration (for external monitoring systems)
# Uncomment and configure for production use
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint/api/v1/read"
#     basic_auth:
#       username: "username"
#       password: "password"

# Note: Storage configuration is handled via command-line flags in docker-compose.yml
# Example flags used in compose:
# --storage.tsdb.path=/prometheus
# --storage.tsdb.retention.time=15d
# --storage.tsdb.retention.size=10GB