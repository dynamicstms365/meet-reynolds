# Reynolds Orchestration System - Secrets Template
# Copy this file to create actual secret files in the secrets/ directory
# DO NOT commit actual secrets to version control

# =============================================================================
# GITHUB INTEGRATION SECRETS
# =============================================================================

# GitHub Personal Access Token
# Required scopes: repo, admin:org, admin:public_key, admin:repo_hook, user, delete_repo, write:discussion, admin:enterprise
# File: secrets/github_token.txt
GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# GitHub App Configuration (if using GitHub App instead of PAT)
# File: secrets/github_app_config.json
GITHUB_APP_CONFIG={
  "app_id": "123456",
  "installation_id": "12345678",
  "private_key_path": "/run/secrets/github_app_private_key"
}

# =============================================================================
# AZURE INTEGRATION SECRETS
# =============================================================================

# Azure Service Principal Credentials
# File: secrets/azure_credentials.json
AZURE_CREDENTIALS={
  "clientId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "clientSecret": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "subscriptionId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "tenantId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "activeDirectoryEndpointUrl": "https://login.microsoftonline.com",
  "resourceManagerEndpointUrl": "https://management.azure.com/",
  "activeDirectoryGraphResourceId": "https://graph.windows.net/",
  "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/",
  "galleryEndpointUrl": "https://gallery.azure.com/",
  "managementEndpointUrl": "https://management.core.windows.net/"
}

# =============================================================================
# MICROSOFT 365 / POWER PLATFORM SECRETS
# =============================================================================

# Microsoft 365 Tenant ID
# File: secrets/tenant_id.txt
M365_TENANT_ID=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx

# Microsoft 365 Application Credentials
# File: secrets/m365_credentials.json
M365_CREDENTIALS={
  "clientId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "clientSecret": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "tenantId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "redirectUri": "http://localhost:8080/auth/callback",
  "scopes": [
    "https://graph.microsoft.com/.default",
    "https://admin.powerplatform.microsoft.com/.default"
  ]
}

# Power Platform Environment Configuration
POWER_PLATFORM_CONFIG={
  "environment_url": "https://orgname.crm.dynamics.com",
  "environment_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "dataverse_url": "https://orgname.api.crm.dynamics.com/api/data/v9.2/"
}

# =============================================================================
# AI SERVICES SECRETS
# =============================================================================

# OpenAI API Key
# File: secrets/openai_api_key.txt
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Additional AI Service Keys (if needed)
ANTHROPIC_API_KEY=sk-ant-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
AZURE_OPENAI_API_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# =============================================================================
# DATABASE SECRETS
# =============================================================================

# PostgreSQL Database Password
# File: secrets/db_password.txt
DB_PASSWORD=your_secure_database_password_here

# Database Connection String Template
DB_CONNECTION_STRING=postgresql://reynolds:${DB_PASSWORD}@postgres:5432/orchestration

# =============================================================================
# MONITORING SECRETS
# =============================================================================

# Grafana Admin Password
# File: secrets/grafana_password.txt
GRAFANA_PASSWORD=your_secure_grafana_password_here

# Prometheus Configuration (if authentication is enabled)
PROMETHEUS_AUTH_USERNAME=prometheus
PROMETHEUS_AUTH_PASSWORD=your_secure_prometheus_password_here

# =============================================================================
# CONTAINER REGISTRY SECRETS (if using private registries)
# =============================================================================

# Docker Registry Credentials
DOCKER_REGISTRY_USERNAME=your_registry_username
DOCKER_REGISTRY_PASSWORD=your_registry_password
DOCKER_REGISTRY_URL=your-private-registry.azurecr.io

# =============================================================================
# SSL/TLS CERTIFICATES (for production)
# =============================================================================

# SSL Certificate and Key for HTTPS
SSL_CERTIFICATE_PATH=/run/secrets/ssl_certificate
SSL_PRIVATE_KEY_PATH=/run/secrets/ssl_private_key
SSL_CA_BUNDLE_PATH=/run/secrets/ssl_ca_bundle

# =============================================================================
# WEBHOOK SECRETS
# =============================================================================

# GitHub Webhook Secret
# File: secrets/github_webhook_secret.txt
GITHUB_WEBHOOK_SECRET=your_github_webhook_secret_here

# Azure DevOps Webhook Secret
AZDO_WEBHOOK_SECRET=your_azdo_webhook_secret_here

# =============================================================================
# ENCRYPTION KEYS
# =============================================================================

# Application Encryption Key (for encrypting sensitive data at rest)
# File: secrets/encryption_key.txt
ENCRYPTION_KEY=your_32_character_encryption_key_here

# JWT Signing Key (for API authentication tokens)
JWT_SIGNING_KEY=your_jwt_signing_key_here

# =============================================================================
# EXTERNAL SERVICE INTEGRATIONS
# =============================================================================

# Slack Integration (for notifications)
SLACK_BOT_TOKEN=xoxb-xxxxxxxxxxxx-xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxx
SLACK_APP_TOKEN=xapp-x-xxxxxxxxxxxx-xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxx

# Microsoft Teams Webhook (for notifications)
TEAMS_WEBHOOK_URL=https://outlook.office.com/webhook/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx

# Email Service Configuration (SendGrid, etc.)
SENDGRID_API_KEY=SG.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
SMTP_PASSWORD=your_smtp_password_here

# =============================================================================
# SECURITY TOKENS
# =============================================================================

# API Security Tokens
API_SECURITY_TOKEN=your_api_security_token_here
WEBHOOK_VERIFICATION_TOKEN=your_webhook_verification_token_here

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================

# Cloud Storage Credentials (for backups)
AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
AWS_DEFAULT_REGION=us-west-2

AZURE_STORAGE_ACCOUNT_NAME=your_storage_account
AZURE_STORAGE_ACCOUNT_KEY=your_storage_account_key

# =============================================================================
# INSTRUCTIONS FOR SETUP
# =============================================================================

# 1. Copy this file to create your actual secret files:
#    cp config/secrets.env.template secrets/setup_secrets.sh
#    chmod +x secrets/setup_secrets.sh
#    
# 2. Edit each secret file individually:
#    echo "your_actual_github_token" > secrets/github_token.txt
#    echo "your_actual_db_password" > secrets/db_password.txt
#    etc.
#
# 3. Set proper permissions on secret files:
#    chmod 600 secrets/*
#    
# 4. Ensure secrets directory is not committed to version control:
#    echo "secrets/*.txt" >> .gitignore
#    echo "secrets/*.json" >> .gitignore
#    echo "secrets/*.key" >> .gitignore
#
# 5. For production, consider using external secret management:
#    - Azure Key Vault
#    - AWS Secrets Manager
#    - HashiCorp Vault
#    - Kubernetes Secrets
#
# 6. Test secret loading:
#    ./start-orchestration.sh test