name: "Assign Issue to Copilot"

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to assign to copilot'
        required: true
        type: string

jobs:
  assign-to-copilot:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.NGL_DEVOPS_APP_ID }}
          private-key: ${{ secrets.NGL_DEVOPS_BOT_PEM }}
          
      - name: Assign Issue to Copilot
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ISSUE_NUMBER: ${{ inputs.issue_number }}
        run: |
          echo "Attempting to assign issue #${ISSUE_NUMBER} to copilot using GitHub App token..."
          
          # Try multiple assignment approaches with App token
          echo "Method 1: REST API with 'Copilot'"
          curl -X PATCH \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${ISSUE_NUMBER}" \
            -d '{"assignees": ["Copilot"]}' || echo "Method 1 failed"
          
          echo "Method 2: REST API with 'copilot'"  
          curl -X PATCH \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${ISSUE_NUMBER}" \
            -d '{"assignees": ["copilot"]}' || echo "Method 2 failed"
            
      - name: Try GraphQL Assignment
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ISSUE_NUMBER: ${{ inputs.issue_number }}
        run: |
          echo "Method 3: GraphQL API"
          
          # First get the issue node ID
          ISSUE_QUERY=$(cat << 'EOF'
          {
            repository(owner: "${{ github.repository_owner }}", name: "${{ github.event.repository.name }}") {
              issue(number: ${{ inputs.issue_number }}) {
                id
                title
              }
            }
          }
          EOF
          )
          
          ISSUE_RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Content-Type: application/json" \
            "https://api.github.com/graphql" \
            -d "{\"query\": \"$(echo $ISSUE_QUERY | tr -d '\n')\"}")
          
          echo "Issue query response: $ISSUE_RESPONSE"
          
          ISSUE_ID=$(echo $ISSUE_RESPONSE | jq -r '.data.repository.issue.id')
          echo "Issue ID: $ISSUE_ID"
          
          # Try GraphQL mutation
          MUTATION=$(cat << EOF
          mutation {
            updateIssue(input: {
              id: "$ISSUE_ID"
              assigneeIds: ["BOT_kgDOC9w8XQ"]
            }) {
              issue {
                id
                title
                assignees(first: 10) {
                  nodes {
                    id
                    login
                  }
                }
              }
            }
          }
          EOF
          )
          
          curl -X POST \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Content-Type: application/json" \
            "https://api.github.com/graphql" \
            -d "{\"query\": \"$(echo $MUTATION | tr -d '\n')\"}" || echo "GraphQL method failed"
            
      - name: Verify Assignment
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ISSUE_NUMBER: ${{ inputs.issue_number }}
        run: |
          echo "Checking if assignment was successful..."
          curl -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${ISSUE_NUMBER}" \
            | jq '.assignees[] | {login: .login, id: .node_id}'