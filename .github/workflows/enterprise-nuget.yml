# Enterprise NuGet Publishing - Auto-publish enterprise-enhanced MCP packages
name: Enterprise NuGet Publishing

on:
  push:
    branches:
      - feature/issue-365-httpcontextaccessor-fix
      - main
  workflow_dispatch:
    inputs:
      version_suffix_override:
        description: 'Custom version suffix (default: enterprise.{run_number})'
        type: string
  schedule:
    - cron: '0 8 * * *'  # Daily at 08:00 UTC

jobs:
  enterprise-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Clone the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Semantic Version
        id: semver
        uses: PaulHatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: true
          search_commit_body: true
      
      - name: Set Enterprise Version
        id: enterprise_version
        run: |
          SEMANTIC_VERSION="${{ steps.semver.outputs.version }}"
          ENTERPRISE_SUFFIX="${{ inputs.version_suffix_override || format('enterprise.{0}', github.run_number) }}"
          FULL_VERSION="${SEMANTIC_VERSION}-${ENTERPRISE_SUFFIX}"
          echo "version=${FULL_VERSION}" >> $GITHUB_OUTPUT
          echo "ðŸŽ¯ Reynolds Enterprise Version: ${FULL_VERSION}"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x

      - name: Restore dependencies
        run: dotnet restore src/CopilotAgent/CopilotAgent.csproj

      - name: Build solution
        run: dotnet build src/CopilotAgent/CopilotAgent.csproj --configuration Release --no-restore

      - name: Create artifacts directory
        run: mkdir -p "${{ github.workspace }}/artifacts/packages"

      - name: Pack enterprise packages
        run: |
          dotnet pack src/CopilotAgent/CopilotAgent.csproj \
            --configuration Release \
            --no-build \
            --property:PackageVersion="${{ steps.enterprise_version.outputs.version }}" \
            --output "${{ github.workspace }}/artifacts/packages"

      - name: Verify packages created
        run: |
          echo "Contents of artifacts/packages:"
          ls -la "${{ github.workspace }}/artifacts/packages" || echo "Directory doesn't exist!"

      - name: Setup GitHub NuGet source
        run: |
          dotnet nuget add source \
            "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --name "github-enterprise" \
            --username ${{ github.actor }} \
            --password ${{ secrets.GITHUB_TOKEN }} \
            --store-password-in-clear-text

      - name: Publish enterprise packages to GitHub
        run: |
          dotnet nuget push \
            "${{ github.workspace }}/artifacts/packages/*.nupkg" \
            --source "github-enterprise" \
            --api-key ${{ secrets.GITHUB_TOKEN }} \
            --skip-duplicate
